#!/bin/bash

# ===== CONFIGURA√á√ÉO =====
SERVER_DIR="$HOME/.steam/steam/steamapps/common/DayZServer"
SCRIPT_DIR="$SERVER_DIR/script_server_linux"
MOD_ID_FILE="mod_ids.txt"

MODS_ID=$(<"$SCRIPT_DIR/$MOD_ID_FILE")
MODS_ID="${MODS_ID//\"/}"  # Remove aspas
MODS_ID="${MODS_ID// /}"   # Remove espa√ßos
MODS_ID="${MODS_ID//$'\n'/}"  # Remove quebras de linha
MODS_ID="${MODS_ID//$'\t'/}"  # (Opcional) Remove tabs

IFS=';' read -ra IDS <<< "$MODS_ID"

WEBHOOK_URL=""
CACHE_FILE="$HOME/.cache/dayz_mods_update_check"
mkdir -p "$(dirname "$CACHE_FILE")"
touch "$CACHE_FILE"

echo "üöÄ Iniciando verifica√ß√£o cont√≠nua de atualiza√ß√µes de mods Steam Workshop..."
echo "‚è±Ô∏è Intervalo: a cada 10 minutos"
echo "üìÖ In√≠cio: $(date)"
echo "------------------------------------------"

while true; do
    echo "üîÑ Verificando atualiza√ß√µes... ($(date))"
    
    for id in "${IDS[@]}"; do
    	[[ -z "$id" ]] && continue  # pula entradas vazias (como a √∫ltima)
    	
        MOD_URL="https://steamcommunity.com/sharedfiles/filedetails/?id=$id"
        
        HTML=$(curl -s "$MOD_URL")

        # Extrai o nome do mod
        MOD_NAME=$(echo "$HTML" | grep -oP '<div class="workshopItemTitle">.*?</div>' | sed -e 's/<[^>]*>//g' | xargs)

        # Extrai a data da √∫ltima atualiza√ß√£o
        UPDATED_DATE=$(echo "$HTML" | grep -oP '<div class="detailsStatRight">.*?</div>' | sed -e 's/<[^>]*>//g' | sed -n '3p' | xargs)

        # Converte a data para timestamp (Unix time)
        if [[ -n "$UPDATED_DATE" ]]; then
            UPDATED_DATE_EN=$(echo "$UPDATED_DATE" | sed -e 's/jan\./Jan/' -e 's/fev\./Feb/' -e 's/mar\./Mar/' -e 's/abr\./Apr/' \
                                              -e 's/mai\./May/' -e 's/jun\./Jun/' -e 's/jul\./Jul/' -e 's/ago\./Aug/' \
                                              -e 's/set\./Sep/' -e 's/out\./Oct/' -e 's/nov\./Nov/' -e 's/dez\./Dec/')

	    # Remove v√≠rgulas e "@"
	    UPDATED_DATE_CLEAN=$(echo "$UPDATED_DATE" | sed -E 's/,//g; s/@//g' | xargs)

	    # Se j√° cont√©m ano expl√≠cito
	    if [[ "$UPDATED_DATE_CLEAN" =~ [0-9]{4} ]]; then
	        DATE_TO_PARSE="$UPDATED_DATE_CLEAN"
	    else
	        CURRENT_YEAR=$(date +%Y)
	        # Move o hor√°rio para o fim: ex: "28 Feb 8:02am" -> "28 Feb 2025 8:02am"
	        DATE_TO_PARSE=$(echo "$UPDATED_DATE_CLEAN $CURRENT_YEAR" | awk '{print $1, $2, $4, $3}')
	    fi

	    # Converte para timestamp
	    MOD_TIMESTAMP=$(date -d "$DATE_TO_PARSE" +%s 2>/dev/null)
        
        else
            MOD_TIMESTAMP=0
        fi
        
        # Verifica se a convers√£o foi bem-sucedida
	if [[ -z "$MOD_TIMESTAMP" ]]; then
	    echo "‚ö†Ô∏è [$id] $MOD_NAME ‚Äî Erro ao converter a data: '$UPDATED_DATE' (tratada: '$DATE_TO_PARSE')"
	fi

        # Carrega timestamp salvo
        LAST_TIMESTAMP=$(grep "^$id:" "$CACHE_FILE" | cut -d: -f2)

        # Verifica√ß√£o de atualiza√ß√£o
        if [[ -z "$LAST_TIMESTAMP" ]]; then
            echo "üìå [$id] $MOD_NAME ‚Äî Primeira verifica√ß√£o, atualizado em: $UPDATED_DATE"
            if [[ "$MOD_TIMESTAMP" -gt 0 ]]; then
	        echo "$id:$MOD_TIMESTAMP" >> "$CACHE_FILE"
	    fi
        elif [[ "$MOD_TIMESTAMP" -gt "$LAST_TIMESTAMP" ]]; then
            echo "‚úÖ [$id] $MOD_NAME ‚Äî FOI ATUALIZADO! Nova data: $UPDATED_DATE"
            sed -i "s/^$id:.*/$id:$MOD_TIMESTAMP/" "$CACHE_FILE"

            # Envia notifica√ß√£o ao Discord
            curl -s -X POST "$WEBHOOK_URL" \
                -H "Content-Type: application/json" \
                -d @- <<EOF
{
  "username": "DayZ Mod Watcher",
  "content": "üß© **Mod atualizado!**\nüìå Nome: **$MOD_NAME**\nüÜî ID: \`$id\`\nüìÖ Atualizado em: $UPDATED_DATE\nüîó $MOD_URL\n@everyone""
}
EOF
        else
            echo "‚è∏Ô∏è [$id] $MOD_NAME ‚Äî Sem altera√ß√µes desde: $UPDATED_DATE"
        fi

        sleep 2  # Atraso entre as requisi√ß√µes
    done

    echo "üïî Aguardando 10 minutos para pr√≥xima verifica√ß√£o..."
    echo "------------------------------------------"
    sleep 600
done

